import Head from 'next/head'
import { PrismaClient } from '@prisma/client'
import { useCookies } from "react-cookie";
import RedirectButton from '../components/button'

export async function getStaticProps() {
  // This will load server-side assets like problems, user profiles, and leaderboard
  const prisma = new PrismaClient();
  const problems = await prisma.problem.findMany();
  return {
    props: { problems }
  }
}

const Home = ({problems}) => {

  const [cookie, setCookie] = useCookies(["user"]);

  return (
    <div>

      {/* Title/favicon */}
      <Head>
        <title>todo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Header bar */}
      <div className="flex flex-col w-screen">
        <div className="text-size-4 bg-gray-200 text-black hover:bg-gray-500 hover:text-white transition-all p-2">
          <span className="px-6">CODE_COMP</span>
          {/* Buttons */}
          <RedirectButton href="/leaderboard">leaderboard</RedirectButton>
          <RedirectButton href="/solutions">solutions</RedirectButton>
          <RedirectButton href="/">problems</RedirectButton>
          <RedirectButton href="/login">logged in as <span className="text-white">{cookie.user ? cookie.user : "Guest"}</span></RedirectButton>
        </div>
      </div>

      {/* Server-loaded problem table */}
      <div className="flex flex-col">
        <div className="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
          <div className="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8">
            <div className="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
              <table className="min-w-full divide-y divide-gray-200">
                <thead className="bg-gray-50">
                  <tr>
                    <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                    <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
                    <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Difficulty</th>
                    <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Points</th>
                    <th scope="col" className="relative px-6 py-3">
                      <span className="sr-only">Edit</span>
                    </th>
                  </tr>
                </thead>
                <tbody className="bg-white divide-y divide-gray-200 content">

                  {/* Map problems to table rows */}
                  {problems.map(problem => {
                    return (
                      <tr key={problem.id}>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <div className="flex items-center">
                            <div className="ml-4">
                              {problem.name}
                            </div>
                          </div>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          {problem.description}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <span className="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">{problem.difficulty}</span>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{problem.points}</td>
                      </tr>
                    );
                  })}

                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>


    </div>
  )
}

export default Home;
